rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {

    // Rules for the 'users' collection (already good)
    match /users/{userId} {
      // Anyone who is authenticated can read user profiles (needed for chat list and matching)
      allow read: if request.auth != null;
      // A user can only create or update their own profile
      allow write: if request.auth.uid == userId;
    }

    // NEW RULES FOR 'quizAnswers' COLLECTION
    match /quizAnswers/{quizId} {
      // Allow any authenticated user to read ALL quiz answers.
      // This is necessary for your discover.js to fetch all answers for matching.
      allow read: if request.auth != null;
      // Allow a user to only create or update their own quiz answers.
      // Assuming 'quizId' is the user's UID for their quiz document.
      allow write: if request.auth != null && request.auth.uid == quizId;
    }

    // Rules for the 'chats' collection (already good)
    match /chats/{chatId} {
      // Allow a user to read a chat document if their UID is in the 'participants' array
      allow read: if request.auth.uid in resource.data.participants;

      // Allow a user to create a chat if their UID is in the 'participants' array of the NEW document
      allow create: if request.auth.uid in request.resource.data.participants;

      // Allow a user to update a chat (e.g., lastMessage, typing status) if they are a participant
      allow update: if request.auth.uid in resource.data.participants;

      // Disallow deleting chats for now to be safe
      allow delete: if false;

      // Rules for the 'messages' subcollection within a chat (already good)
      match /messages/{messageId} {
        // Allow reading messages if the user is a participant of the parent chat
        allow read: if get(/databases/$(database)/documents/chats/$(chatId)).data.participants.hasAny([request.auth.uid]);

        // Allow creating a message if the user is a participant AND the senderId is their own UID
        allow create: if get(/databases/$(database)/documents/chats/$(chatId)).data.participants.hasAny([request.auth.uid])
                      && request.resource.data.senderId == request.auth.uid;

        // Do not allow updating or deleting messages
        allow update, delete: if false;
      }
    }
  }
}